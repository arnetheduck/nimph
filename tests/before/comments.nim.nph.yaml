kind: "nkStmtList"
sons:
  - kind: "nkCommentStmt"
    "comment": "#"
  - kind: "nkCommentStmt"
    "comment": "#"
  - kind: "nkCommentStmt"
    "comment": "# Some commentary"
  - kind: "nkCommentStmt"
    "comment": "## A doc comment"
  - kind: "nkCommentStmt"
    "comment": "##"
  - kind: "nkCommentStmt"
    "comment": "##"
  - kind: "nkCommentStmt"
    "comment": "## More doc comments"
  - kind: "nkCommentStmt"
    "comment": "##"
  - kind: "nkCommentStmt"
    "comment": "#"
  - kind: "nkCommentStmt"
    "comment": "# Comment"
  - kind: "nkCommentStmt"
    "comment": "#"
  - kind: "nkCommentStmt"
    "comment": "#[ a multiline comment\u000Athis is also part of it\u000Aand this\u000A]#"
  - kind: "nkCommentStmt"
    "comment": "##[\u000A  these also come in doc variants\u000A]##"
  - kind: "nkCommentStmt"
    "comment": "#[\u000A  #[\u000A    they can be nested\u000A  ]#\u000A]#"
  - kind: "nkTemplateDef"
    sons:
      - kind: "nkIdent"
        ident: "x"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "## A template doc comment"
          - kind: "nkTryStmt"
            sons:
              - kind: "nkStmtList"
                sons:
                  - kind: "nkDiscardStmt"
                    sons:
                      - kind: "nkEmpty"
              - kind: "nkExceptBranch"
                sons:
                  - kind: "nkIdent"
                    ident: "Exception"
                  - kind: "nkStmtList"
                    sons:
                      - kind: "nkMixinStmt"
                        sons:
                          - kind: "nkAccQuoted"
                            sons:
                              - kind: "nkIdent"
                                ident: "$"
                            postfix:
                              - "# A comment after mixin"
                      - kind: "nkCommand"
                        sons:
                          - kind: "nkIdent"
                            ident: "echo"
                          - kind: "nkIntLit"
                            intVal: 4
  - kind: "nkTypeSection"
    sons:
      - kind: "nkTypeDef"
        prefix:
          - "# comment after type keyword"
        sons:
          - kind: "nkPostfix"
            sons:
              - kind: "nkIdent"
                ident: "*"
              - kind: "nkIdent"
                ident: "LonelyObject"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            sons:
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkEmpty"
  - kind: "nkTypeSection"
    sons:
      - kind: "nkTypeDef"
        sons:
          - kind: "nkPragmaExpr"
            sons:
              - kind: "nkPostfix"
                sons:
                  - kind: "nkIdent"
                    ident: "*"
                  - kind: "nkIdent"
                    ident: "SingleValueSetting"
              - kind: "nkPragma"
                sons:
                  - kind: "nkIdent"
                    ident: "pure"
          - kind: "nkEmpty"
          - kind: "nkEnumTy"
            mid:
              - "## \\"
              - "## settings resulting in a single string value"
            sons:
              - kind: "nkEmpty"
              - kind: "nkIdent"
                ident: "arguments"
                postfix:
                  - "## experimental: the arguments passed after '-r'"
              - kind: "nkIdent"
                ident: "backend"
                postfix:
                  - "## the backend (eg: c|cpp|objc|js); both `nim doc --backend:js`"
                  - "## and `nim js` would imply backend=js"
              - kind: "nkPragmaExpr"
                sons:
                  - kind: "nkIdent"
                    ident: "gc"
                  - kind: "nkPragma"
                    sons:
                      - kind: "nkIdent"
                        ident: "deprecated"
                postfix:
                  - "## gc selected"
              - kind: "nkIdent"
                ident: "mm"
                postfix:
                  - "## memory management selected"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkPostfix"
            sons:
              - kind: "nkIdent"
                ident: "*"
              - kind: "nkIdent"
                ident: "FileSeekPos"
          - kind: "nkEmpty"
          - kind: "nkEnumTy"
            sons:
              - kind: "nkEmpty"
              - kind: "nkIdent"
                ident: "fspEnd"
                postfix:
                  - "## Seek relative to end"
            postfix:
              - "# text file handling:"
      - kind: "nkTypeDef"
        prefix:
          - "## Position relative to which seek should happen."
          - "# The values are ordered so that they match with stdio"
          - "# SEEK_SET, SEEK_CUR and SEEK_END respectively."
        sons:
          - kind: "nkIdent"
            ident: "Object"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            mid:
              - "# comment"
              - "## more comment"
            sons:
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkRecList"
                sons:
                  - kind: "nkIdentDefs"
                    sons:
                      - kind: "nkIdent"
                        ident: "field"
                      - kind: "nkIdent"
                        ident: "int"
                      - kind: "nkEmpty"
                    postfix:
                      - "# Field comment"
                  - kind: "nkIdentDefs"
                    prefix:
                      - "# comment between fields"
                    sons:
                      - kind: "nkIdent"
                        ident: "field2"
                      - kind: "nkIdent"
                        ident: "int"
                      - kind: "nkEmpty"
                    postfix:
                      - "## Field comment again"
                  - kind: "nkIdentDefs"
                    sons:
                      - kind: "nkIdent"
                        ident: "fiiiiiiiiiiiiiiiiiiiiiiiieeeeeeeeeld"
                      - kind: "nkIdent"
                        ident: "int"
                      - kind: "nkEmpty"
                    postfix:
                      - "# loooooooooooooooooooong comment past the max line length"
      - kind: "nkTypeDef"
        prefix:
          - "# and here"
        sons:
          - kind: "nkIdent"
            ident: "NewlineObject"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            sons:
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkRecList"
                sons:
                  - kind: "nkIdentDefs"
                    sons:
                      - kind: "nkIdent"
                        ident: "field"
                      - kind: "nkIdent"
                        ident: "int"
                      - kind: "nkEmpty"
                    postfix:
                      - "## doc comment after field"
                  - kind: "nkIdentDefs"
                    prefix:
                      - "## doc comment continues, though not as a postfix - empty line after"
                    sons:
                      - kind: "nkIdent"
                        ident: "field2"
                      - kind: "nkIdent"
                        ident: "int"
                      - kind: "nkEmpty"
                    postfix:
                      - "## just a doc again"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkIdent"
            ident: "Inherited"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            mid:
              - "# inherited eol comment"
              - "# inherited next line indent comments"
            sons:
              - kind: "nkEmpty"
              - kind: "nkOfInherit"
                sons:
                  - kind: "nkIdent"
                    ident: "RootObj"
              - kind: "nkRecList"
                sons:
                  - kind: "nkIdentDefs"
                    sons:
                      - kind: "nkIdent"
                        ident: "f"
                      - kind: "nkIdent"
                        ident: "int"
                      - kind: "nkEmpty"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkIdent"
            ident: "CaseObject"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            mid:
              - "# caseobj eol"
            sons:
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkRecList"
                sons:
                  - kind: "nkRecCase"
                    mid:
                      - "# casetype eol"
                    sons:
                      - kind: "nkIdentDefs"
                        sons:
                          - kind: "nkIdent"
                            ident: "k"
                          - kind: "nkIdent"
                            ident: "bool"
                          - kind: "nkEmpty"
                      - kind: "nkOfBranch"
                        mid:
                          - "# of eol"
                        sons:
                          - kind: "nkIdent"
                            ident: "true"
                          - kind: "nkIdent"
                            ident: "false"
                          - kind: "nkRecList"
                            sons:
                              - kind: "nkIdentDefs"
                                sons:
                                  - kind: "nkIdent"
                                    ident: "v"
                                  - kind: "nkIdent"
                                    ident: "string"
                                  - kind: "nkEmpty"
                                postfix:
                                  - "# case field eol"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkPostfix"
            sons:
              - kind: "nkIdent"
                ident: "*"
              - kind: "nkIdent"
                ident: "SomeAlias"
          - kind: "nkEmpty"
          - kind: "nkIdent"
            ident: "int"
            postfix:
              - "## alias eol"
              - "## alias next"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkPragmaExpr"
            prefix:
              - "# after pragma"
            sons:
              - kind: "nkIdent"
                ident: "SomeAlias2"
              - kind: "nkPragma"
                sons:
                  - kind: "nkIdent"
                    ident: "nodecl"
          - kind: "nkEmpty"
          - kind: "nkIdent"
            ident: "int"
            postfix:
              - "## alias2 eol"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkIdent"
            ident: "SomeAlias3"
            postfix:
              - "# alias after symbol"
          - kind: "nkGenericParams"
            sons:
              - kind: "nkIdentDefs"
                sons:
                  - kind: "nkIdent"
                    ident: "T"
                  - kind: "nkEmpty"
                  - kind: "nkEmpty"
          - kind: "nkIdent"
            prefix:
              - "# alias after equals"
            ident: "int"
            postfix:
              - "# alias after type"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkIdent"
            ident: "SomeAlias4"
          - kind: "nkEmpty"
          - kind: "nkBracketExpr"
            sons:
              - kind: "nkIdent"
                ident: "SomeAlias3"
              - kind: "nkIdent"
                ident: "int"
            postfix:
              - "## after alias4"
              - "## more after alias4"
      - kind: "nkTypeDef"
        prefix:
          - "## Some comment before whenobj"
        sons:
          - kind: "nkIdent"
            ident: "WhenObject"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            mid:
              - "# whenobject object line"
            sons:
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkRecList"
                sons:
                  - kind: "nkRecWhen"
                    sons:
                      - kind: "nkElifBranch"
                        mid:
                          - "# when object false line"
                        sons:
                          - kind: "nkIdent"
                            ident: "false"
                          - kind: "nkRecList"
                            sons:
                              - kind: "nkNilLit"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkPostfix"
            sons:
              - kind: "nkIdent"
                ident: "*"
              - kind: "nkIdent"
                ident: "NoField0"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            mid:
              - "## comment eol"
              - "## comment nl"
            sons:
              - kind: "nkEmpty"
              - kind: "nkOfInherit"
                sons:
                  - kind: "nkIdent"
                    ident: "RootObj"
              - kind: "nkEmpty"
      - kind: "nkTypeDef"
        sons:
          - kind: "nkPostfix"
            sons:
              - kind: "nkIdent"
                ident: "*"
              - kind: "nkIdent"
                ident: "NoField1"
          - kind: "nkEmpty"
          - kind: "nkObjectTy"
            mid:
              - "## comment nofield1 eol"
              - "## comment nl"
            sons:
              - kind: "nkEmpty"
              - kind: "nkOfInherit"
                sons:
                  - kind: "nkIdent"
                    ident: "RootObj"
              - kind: "nkEmpty"
  - kind: "nkWhenStmt"
    sons:
      - kind: "nkElifBranch"
        mid:
          - "# when colon line"
        sons:
          - kind: "nkCall"
            sons:
              - kind: "nkIdent"
                ident: "defined"
              - kind: "nkIdent"
                ident: "somecond"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# when first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
      - kind: "nkElse"
        prefix:
          - "# comment"
        mid:
          - "# else colon line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# else first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkIfStmt"
    sons:
      - kind: "nkElifBranch"
        sons:
          - kind: "nkIdent"
            ident: "true"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# if next line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
      - kind: "nkElse"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# else next line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkIfStmt"
    sons:
      - kind: "nkElifBranch"
        mid:
          - "# if colon line"
        sons:
          - kind: "nkIdent"
            ident: "true"
          - kind: "nkStmtList"
            sons:
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
      - kind: "nkElse"
        mid:
          - "# else colon line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkIfStmt"
    sons:
      - kind: "nkElifBranch"
        sons:
          - kind: "nkIdent"
            ident: "true"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# if dedented colon line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
      - kind: "nkElse"
        prefix:
          - "# before else dedented"
        mid:
          - "# else colon line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkProcDef"
    mid:
      - "# after proc before indented name"
    sons:
      - kind: "nkIdent"
        ident: "xxx"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
  - kind: "nkProcDef"
    mid:
      - "# proc eq line"
    sons:
      - kind: "nkIdent"
        ident: "xxxx"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# proc first line"
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
  - kind: "nkProcDef"
    sons:
      - kind: "nkIdent"
        ident: "x"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "## A proc doc comment"
          - kind: "nkIfStmt"
            sons:
              - kind: "nkElifBranch"
                sons:
                  - kind: "nkIdent"
                    ident: "true"
                  - kind: "nkStmtList"
                    sons:
                      - kind: "nkInfix"
                        sons:
                          - kind: "nkIdent"
                            ident: "-="
                          - kind: "nkIdent"
                            ident: "numberOfCharsRead"
                          - kind: "nkIntLit"
                            intVal: 2
                        postfix:
                          - "# handle Ctrl+Z as EOF"
                      - kind: "nkForStmt"
                        sons:
                          - kind: "nkIdent"
                            ident: "i"
                          - kind: "nkInfix"
                            sons:
                              - kind: "nkIdent"
                                ident: "..<"
                              - kind: "nkIntLit"
                                intVal: 0
                              - kind: "nkIdent"
                                ident: "numberOfCharsRead"
                          - kind: "nkStmtList"
                            sons:
                              - kind: "nkDiscardStmt"
                                sons:
                                  - kind: "nkEmpty"
  - kind: "nkProcDef"
    sons:
      - kind: "nkIdent"
        ident: "x"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
    postfix:
      - "## indented doc comment for proc"
      - "## that is long"
  - kind: "nkCommentStmt"
    "comment": "# before module"
  - kind: "nkImportStmt"
    sons:
      - kind: "nkIdent"
        ident: "module"
        postfix:
          - "# with a comment"
  - kind: "nkImportStmt"
    sons:
      - kind: "nkIdent"
        ident: "module"
        postfix:
          - "## with a comment"
  - kind: "nkTryStmt"
    mid:
      - "# try colon line"
    sons:
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# try first line"
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
          - kind: "nkCommentStmt"
            "comment": "# try last line"
      - kind: "nkExceptBranch"
        mid:
          - "# except colon line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# except first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
              - kind: "nkCommentStmt"
                "comment": "# except last line"
      - kind: "nkFinally"
        mid:
          - "# Finally colon line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# finally first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
              - kind: "nkCommentStmt"
                "comment": "# finally last line"
  - kind: "nkTryStmt"
    sons:
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# try first dedent line"
          - kind: "nkCall"
            sons:
              - kind: "nkIdent"
                ident: "f"
      - kind: "nkExceptBranch"
        prefix:
          - "# try last dedent line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# except dedent first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
      - kind: "nkFinally"
        prefix:
          - "# except dedent last line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# finally first dedent line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkCommentStmt"
    "comment": "# finally last dedent line"
  - kind: "nkForStmt"
    mid:
      - "# for colon line"
    sons:
      - kind: "nkIdent"
        ident: "i"
      - kind: "nkInfix"
        sons:
          - kind: "nkIdent"
            ident: ".."
          - kind: "nkIntLit"
            intVal: 0
          - kind: "nkIntLit"
            intVal: 1
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# for first line"
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
  - kind: "nkCaseStmt"
    mid:
      - "# case line"
    sons:
      - kind: "nkIdent"
        ident: "a"
      - kind: "nkOfBranch"
        mid:
          - "# of colon line"
        sons:
          - kind: "nkIdent"
            ident: "true"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# of first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
      - kind: "nkElse"
        mid:
          - "# case else colon line"
        sons:
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# case else first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkCall"
    sons:
      - kind: "nkIdent"
        ident: "f"
      - kind: "nkDo"
        mid:
          - "# do colon line"
        sons:
          - kind: "nkEmpty"
          - kind: "nkEmpty"
          - kind: "nkEmpty"
          - kind: "nkFormalParams"
            sons:
              - kind: "nkIdent"
                ident: "int"
          - kind: "nkEmpty"
          - kind: "nkEmpty"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommentStmt"
                "comment": "# do first line"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkBlockStmt"
    mid:
      - "# block colon line"
    sons:
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# block first line"
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
  - kind: "nkLetSection"
    sons:
      - kind: "nkIdentDefs"
        sons:
          - kind: "nkIdent"
            ident: "x"
          - kind: "nkEmpty"
          - kind: "nkLambda"
            mid:
              - "# lambda eq line"
            sons:
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkFormalParams"
                sons:
                  - kind: "nkIdent"
                    ident: "int"
              - kind: "nkEmpty"
              - kind: "nkEmpty"
              - kind: "nkStmtList"
                sons:
                  - kind: "nkCommentStmt"
                    "comment": "# lambda first line"
                  - kind: "nkDiscardStmt"
                    sons:
                      - kind: "nkEmpty"
                  - kind: "nkDiscardStmt"
                    sons:
                      - kind: "nkEmpty"
  - kind: "nkWhileStmt"
    mid:
      - "# while colon line"
    sons:
      - kind: "nkIdent"
        ident: "false"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# while first line"
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
  - kind: "nkStaticStmt"
    mid:
      - "# static colon line"
    sons:
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# static first line"
          - kind: "nkDiscardStmt"
            sons:
              - kind: "nkEmpty"
  - kind: "nkDiscardStmt"
    sons:
      - kind: "nkObjConstr"
        mid:
          - "# object eol"
        sons:
          - kind: "nkIdent"
            ident: "Object"
          - kind: "nkExprColonExpr"
            sons:
              - kind: "nkIdent"
                prefix:
                  - "# object first line"
                ident: "field"
              - kind: "nkIntLit"
                intVal: 0
            postfix:
              - "# field line"
          - kind: "nkExprColonExpr"
            sons:
              - kind: "nkIdent"
                ident: "field2"
              - kind: "nkIntLit"
                prefix:
                  - "# field colon line"
                  - "# Field colon next line"
                intVal: 42
  - kind: "nkAsgn"
    sons:
      - kind: "nkIdent"
        ident: "a"
      - kind: "nkIdent"
        ident: "b"
  - kind: "nkCommentStmt"
    "comment": "## Doc comment after assignment"
  - kind: "nkCommentStmt"
    "comment": "## needs to be double"
  - kind: "nkProcDef"
    sons:
      - kind: "nkIdent"
        ident: "ffff"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCall"
            sons:
              - kind: "nkDotExpr"
                sons:
                  - kind: "nkIdent"
                    ident: "result"
                  - kind: "nkIdent"
                    ident: "add"
  - kind: "nkCommentStmt"
    "comment": "## Doc comment after indented statement"
  - kind: "nkCommentStmt"
    "comment": "## needs to be double"
  - kind: "nkInfix"
    sons:
      - kind: "nkIdent"
        ident: "and"
      - kind: "nkIdent"
        ident: "abc"
      - kind: "nkIdent"
        prefix:
          - "# dedented comment in infix"
        ident: "def"
  - kind: "nkInfix"
    sons:
      - kind: "nkIdent"
        ident: "and"
      - kind: "nkIdent"
        ident: "abc"
      - kind: "nkIdent"
        prefix:
          - "# indented comment in infix"
        ident: "def"
  - kind: "nkIfStmt"
    sons:
      - kind: "nkElifBranch"
        sons:
          - kind: "nkInfix"
            sons:
              - kind: "nkIdent"
                ident: "and"
              - kind: "nkIdent"
                ident: "abc"
              - kind: "nkIdent"
                prefix:
                  - "# dedented comment in infix"
                ident: "def"
          - kind: "nkStmtList"
            sons:
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkIfStmt"
    sons:
      - kind: "nkElifBranch"
        sons:
          - kind: "nkInfix"
            sons:
              - kind: "nkIdent"
                ident: "and"
              - kind: "nkIdent"
                ident: "abc"
              - kind: "nkIdent"
                prefix:
                  - "# indented comment in infix"
                ident: "def"
          - kind: "nkStmtList"
            sons:
              - kind: "nkDiscardStmt"
                sons:
                  - kind: "nkEmpty"
  - kind: "nkCall"
    sons:
      - kind: "nkIdent"
        ident: "a"
      - kind: "nkExprEqExpr"
        sons:
          - kind: "nkIdent"
            ident: "b"
          - kind: "nkIdent"
            ident: "c"
        postfix:
          - "# comment after keyword parameter"
  - kind: "nkCall"
    sons:
      - kind: "nkIdent"
        ident: "a"
      - kind: "nkExprEqExpr"
        sons:
          - kind: "nkIdent"
            ident: "b"
          - kind: "nkIdent"
            ident: "c"
  - kind: "nkCommentStmt"
    "comment": "# dedented comment after keyword parameter"
  - kind: "nkPragma"
    sons:
      - kind: "nkIdent"
        ident: "pragma"
        postfix:
          - "# comment here"
  - kind: "nkProcDef"
    sons:
      - kind: "nkIdent"
        ident: "a"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
          - kind: "nkIdentDefs"
            sons:
              - kind: "nkIdent"
                ident: "v"
                postfix:
                  - "#[block]#"
              - kind: "nkIdent"
                ident: "int"
              - kind: "nkEmpty"
          - kind: "nkIdentDefs"
            sons:
              - kind: "nkIdent"
                ident: "abc"
              - kind: "nkIdent"
                ident: "int"
              - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
  - kind: "nkLetSection"
    sons:
      - kind: "nkIdentDefs"
        prefix:
          - "# let first line indented"
        sons:
          - kind: "nkIdent"
            ident: "v"
          - kind: "nkEmpty"
          - kind: "nkIntLit"
            intVal: 53
        postfix:
          - "# after v"
  - kind: "nkVarSection"
    sons:
      - kind: "nkIdentDefs"
        prefix:
          - "# var first line indented"
        sons:
          - kind: "nkIdent"
            ident: "v"
          - kind: "nkEmpty"
          - kind: "nkIntLit"
            intVal: 53
        postfix:
          - "# after v"
  - kind: "nkLetSection"
    mid:
      - "# let eol"
    sons:
      - kind: "nkIdentDefs"
        sons:
          - kind: "nkIdent"
            ident: "v"
            postfix:
              - "# let ident after symbol"
          - kind: "nkIdent"
            prefix:
              - "# let ident after colon"
            ident: "int"
          - kind: "nkIntLit"
            prefix:
              - "# let ident after type"
              - "# let ident after equals"
            intVal: 42
        postfix:
          - "# let ident after value"
  - kind: "nkConstSection"
    mid:
      - "# const eol"
    sons:
      - kind: "nkConstDef"
        sons:
          - kind: "nkIdent"
            ident: "v"
            postfix:
              - "# const ident after symbol"
          - kind: "nkIdent"
            prefix:
              - "# const ident after colon"
            ident: "int"
          - kind: "nkIntLit"
            prefix:
              - "# const ident after type"
              - "# const ident after equals"
            intVal: 42
        postfix:
          - "# const ident after value"
  - kind: "nkDiscardStmt"
    sons:
      - kind: "nkIntLit"
        prefix:
          - "# discard eol"
          - "# discard first line"
        intVal: 54
        postfix:
          - "# discard value"
  - kind: "nkProcDef"
    sons:
      - kind: "nkIdent"
        ident: "f"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkIdent"
            ident: "bool"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "## Comment here"
          - kind: "nkCommentStmt"
            "comment": "## another"
          - kind: "nkPar"
            sons:
              - kind: "nkInfix"
                sons:
                  - kind: "nkIdent"
                    ident: "or"
                  - kind: "nkIdent"
                    ident: "true"
                  - kind: "nkIdent"
                    ident: "false"
  - kind: "nkProcDef"
    sons:
      - kind: "nkIdent"
        ident: "f"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkIdent"
            ident: "bool"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "## Comment here"
          - kind: "nkCommentStmt"
            "comment": "## another"
          - kind: "nkIfStmt"
            sons:
              - kind: "nkElifBranch"
                sons:
                  - kind: "nkIdent"
                    ident: "true"
                  - kind: "nkStmtList"
                    sons:
                      - kind: "nkIdent"
                        ident: "false"
              - kind: "nkElse"
                sons:
                  - kind: "nkStmtList"
                    sons:
                      - kind: "nkCommentStmt"
                        "comment": "## comment"
                      - kind: "nkCommentStmt"
                        "comment": "## comment 2"
                      - kind: "nkIfStmt"
                        sons:
                          - kind: "nkElifBranch"
                            sons:
                              - kind: "nkIdent"
                                ident: "true"
                              - kind: "nkStmtList"
                                sons:
                                  - kind: "nkCommentStmt"
                                    "comment": "## comment"
                                  - kind: "nkCommentStmt"
                                    "comment": "## comment 2"
                                  - kind: "nkPar"
                                    sons:
                                      - kind: "nkInfix"
                                        sons:
                                          - kind: "nkIdent"
                                            ident: "or"
                                          - kind: "nkIdent"
                                            ident: "true"
                                          - kind: "nkIdent"
                                            ident: "false"
                          - kind: "nkElse"
                            sons:
                              - kind: "nkStmtList"
                                sons:
                                  - kind: "nkIdent"
                                    ident: "false"
  - kind: "nkProcDef"
    mid:
      - "## Doc comment only"
    sons:
      - kind: "nkIdent"
        ident: "f"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
  - kind: "nkProcDef"
    mid:
      - "## Doc comment only"
      - "## even two lines"
    sons:
      - kind: "nkIdent"
        ident: "f"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkFormalParams"
        sons:
          - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkEmpty"
      - kind: "nkStmtList"
  - kind: "nkCommand"
    sons:
      - kind: "nkIdent"
        ident: "command"
      - kind: "nkStrLit"
        strVal: "a"
      - kind: "nkStrLit"
        strVal: "b"
      - kind: "nkStrLit"
        strVal: "c"
        postfix:
          - "# command eol comment"
  - kind: "nkCommand"
    sons:
      - kind: "nkIdent"
        ident: "command"
      - kind: "nkStrLit"
        strVal: "first arg"
        postfix:
          - "# first arg comment"
      - kind: "nkStrLit"
        strVal: "second arg"
        postfix:
          - "# second arg comment"
      - kind: "nkStrLit"
        strVal: "third arg"
        postfix:
          - "# third arg comment"
  - kind: "nkCommand"
    sons:
      - kind: "nkIdent"
        ident: "command"
      - kind: "nkStrLit"
        strVal: "first arg"
  - kind: "nkCommentStmt"
    "comment": "# comment after command"
  - kind: "nkCommand"
    sons:
      - kind: "nkIdent"
        ident: "command"
      - kind: "nkIntLit"
        intVal: 234
        postfix:
          - "# command after ind"
  - kind: "nkWhenStmt"
    sons:
      - kind: "nkElifBranch"
        sons:
          - kind: "nkIdent"
            ident: "false"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommand"
                sons:
                  - kind: "nkIdent"
                    ident: "command"
                  - kind: "nkStrLit"
                    strVal: "first arg"
              - kind: "nkCommentStmt"
                "comment": "# comment after command nest"
  - kind: "nkWhenStmt"
    sons:
      - kind: "nkElifBranch"
        sons:
          - kind: "nkIdent"
            ident: "false"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommand"
                sons:
                  - kind: "nkIdent"
                    ident: "command"
                  - kind: "nkDotExpr"
                    sons:
                      - kind: "nkIdent"
                        ident: "a"
                      - kind: "nkIdent"
                        ident: "b"
              - kind: "nkCommentStmt"
                "comment": "# comment after command dotexpr nest"
  - kind: "nkCall"
    sons:
      - kind: "nkIdent"
        ident: "call"
    postfix:
      - "# call eol"
  - kind: "nkCommand"
    sons:
      - kind: "nkIdent"
        ident: "echo"
      - kind: "nkDotExpr"
        sons:
          - kind: "nkIdent"
            ident: "dotexpr"
          - kind: "nkIdent"
            ident: "dot"
        postfix:
          - "# after dotexpr in command"
  - kind: "nkCommentStmt"
    "comment": "# between two dotepxrs"
  - kind: "nkDotExpr"
    mid:
      - "# between dotexpr and dotonnewline"
    sons:
      - kind: "nkIdent"
        ident: "dotexpr"
      - kind: "nkIdent"
        ident: "dotonnewline"
  - kind: "nkIfStmt"
    sons:
      - kind: "nkElifBranch"
        sons:
          - kind: "nkIdent"
            ident: "true"
          - kind: "nkStmtList"
            sons:
              - kind: "nkCommand"
                sons:
                  - kind: "nkIdent"
                    ident: "echo"
                  - kind: "nkDotExpr"
                    sons:
                      - kind: "nkIdent"
                        ident: "dotexpr"
                      - kind: "nkIdent"
                        ident: "dot"
                    postfix:
                      - "# after dotexpr in command ind"
              - kind: "nkCommentStmt"
                "comment": "# between two dotepxrs ind"
              - kind: "nkDotExpr"
                mid:
                  - "# between dotexpr and dotonnewline ind"
                sons:
                  - kind: "nkIdent"
                    ident: "dotexpr"
                  - kind: "nkIdent"
                    ident: "dotonnewline"
  - kind: "nkBlockStmt"
    sons:
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCall"
            sons:
              - kind: "nkDotExpr"
                mid:
                  - "# also after call"
                sons:
                  - kind: "nkCall"
                    sons:
                      - kind: "nkDotExpr"
                        mid:
                          - "# comment between the dots"
                        sons:
                          - kind: "nkDotExpr"
                            sons:
                              - kind: "nkIdent"
                                ident: "f"
                              - kind: "nkIdent"
                                ident: "x"
                          - kind: "nkIdent"
                            ident: "z"
                  - kind: "nkIdent"
                    ident: "d"
            postfix:
              - "# far eol of dotexpr"
          - kind: "nkCommentStmt"
            "comment": "# after dotexpr ind"
  - kind: "nkBlockStmt"
    sons:
      - kind: "nkEmpty"
      - kind: "nkStmtList"
        sons:
          - kind: "nkCommentStmt"
            "comment": "# no whitespace between the next two multilines"
          - kind: "nkCall"
            sons:
              - kind: "nkIdent"
                ident: "functionCall"
              - kind: "nkIdent"
                ident: "param"
          - kind: "nkCall"
            sons:
              - kind: "nkIdent"
                ident: "functionCall"
              - kind: "nkIdent"
                ident: "param"